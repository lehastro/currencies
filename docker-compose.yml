version: '3.5'

services:
  database:
    image: postgres:14-alpine 
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234   
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - back   
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile_back
    command: python3 -m flask run -h 10.178.237.4
    volumes: 
      - ./backend:/app
    
    ports: 
      - 5000:5000
    environment: 
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
    depends_on: 
      - database
      - frontend
    restart: always
    networks:
      - front
      - back

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile_web
    restart: always
    volumes: 
      - ./frontend:/usr/share/nginx/html
    ports: 
      - 1234:80
    networks:
      - front
    


networks:
  back:
    driver: bridge
    ipam:
      config: 
        - subnet: 10.178.236.0/24
          gateway: 10.178.236.1
          aux_addresses: 
            database: 10.178.236.2
            backend: 10.178.236.3
  front: 
    driver: bridge
    ipam:
      config: 
        - subnet: 10.178.237.0/24
          gateway: 10.178.237.1
          aux_addresses: 
            frontend: 10.178.237.2
   
